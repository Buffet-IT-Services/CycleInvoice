# pyproject.toml

[tool.ruff]
exclude = [
    ".direnv",
    ".git",
    ".git-rewrite",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "node_modules",
    "*/migrations/*",
]
line-length = 120 # Maximum line length for code.
indent-width = 4 # Number of spaces per indentation level.
target-version = "py312" # Target Python version for compatibility.

[tool.ruff.lint]
select = ["ALL", ]
ignore = [
    "D203", # conflicting with D211 (no blank line before class docstring)
    "D212", # conflicting with D213 (multiline docstring summary should start at the first line)
    "COM812", # does not work well with autoformatter
    "D415", # conflicting with D400 (first line should end with a period)
    "RUF012", # too many false positives
    "ANN002", # in django projects, *args comes from the parent class
    "ANN003", # in django projects, **kwargs comes from the parent class
    "PT027", "PT009", # for django tests, we need to use the test client
    "TD002", # Florin Buffet anyway is responsible for this
    "FIX002", # todos are meant to be fixed later
]

# Allow fix for all rules (when --fix is used).
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double" # Use double quotes for strings.
indent-style = "space" # Use spaces for indentation.
skip-magic-trailing-comma = false # Do not skip trailing commas in multiline constructs.
line-ending = "auto" # Use LF line endings.
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D"]
"manage.py" = ["TRY003", "EM101", "ANN201", "EXE001", "PLC0415"]
"*/services/*" = ["PLR0913"] # Services have many arguments to create a single item.

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.isort]
case-sensitive = true # Sort imports in a case-sensitive manner.